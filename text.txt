翻转数列
#include <iostream>
using namespace std;

int main()
{
    long long m,n;
    cin>>m>>n;
    cout<<n*m/2<<endl;
}





纸牌游戏
#include <iostream>
#include <algorithm>
using namespace std;

bool compare(int a, int b)
{
    return a>b;
}


int main()
{
    int n;
    int num;
    cin>>n;
    int *a = (int *)malloc(sizeof(int)*n);
    
    int i = 0;
    for(i = 0; i<n; i++)
    {
        cin>>num;
        a[i] = num;
    }
    int sumNN = 0;
    int sumYY = 0;
    sort(a,a+n,compare);
    for(i = 0; i<n; i+=2)
    {
        sumNN += a[i];
    }
    for(i = 1; i<n; i+=2)
    {
        sumYY += a[i];
    }
    
    cout<<sumNN-sumYY;
    return 0;
    
}




贪吃的小Q
#include<iostream>
using namespace std;
int n,m;
//计算第一天吃s个巧克力一共需要多少个多少个巧克力
int sum(int s){
    int sum=0;
    for(int i=0;i<n;i++){
        sum+=s;
        s=(s+1)>>1;//向上取整
    }
    return sum;
}
//二分查找
int fun(){
    if(n==1) return m;
    int low=1;
    int high=m;//第一天的巧克力一定是大于等于1小于等于m的
    while(low<high){
        int mid=(low+high+1)>>1;//向上取整
        if(sum(mid)==m) return mid;//如果第一天吃mid个巧克力，刚刚好吃完所有巧克力，那么直接返回
        else if(sum(mid)<m){
            low=mid;
        }else{
            high=mid-1;
        }
    }
    return high;
}
int main()
{
    cin>>n>>m;
    int res=fun();
    cout<<res<<endl;
    return 0;
}




小Q的歌单
#include <iostream>

using namespace std;
const int mod = 1000000007;
int a, x, b, y, k;
long long dp[1010];
int p[210];

int main() {
	cin >> k;
	cin >> a >> x >> b >> y;
	dp[0] = 1;
	for (int i = 1; i <= x; i++) 
		p[i] = a;
	for (int i = x + 1; i <= x + y; i++) 
		p[i] = b;

	for (int i = 1; i <= x + y; i++) 
	{
		for (int j = k; j >= p[i]; j--)
		{
			dp[j] = (dp[j] % mod + dp[j - p[i]] % mod) % mod;
		}
	}
	cout << dp[k] % mod << endl;
	return 0;
}


安排机器
#include <iostream>
#include <string.h>
#include <algorithm>
using namespace std;
#define LL long long
const int maxn = 1e5 + 10;
struct node {
    int x, y;
}e[maxn], f[maxn];  //定义两个结构数组
int cnt[105];
int cmp(node a, node b)
{
    if(a.x ==b.x)
        return a.y >b.y;
    return a.x > b.x;
}
 
int main()
{
    int n, m;
    scanf("%d%d", &n, &m);
    for(int i=0; i<n; i++)
        scanf("%d%d", &e[i].x, &e[i].y);
    for(int i=0; i<m; i++)
        scanf("%d%d", &f[i].x, &f[i].y);
    sort(e, e+n, cmp);
    sort(f, f+m, cmp);
    int num = 0;
    LL ans = 0;
    memset(cnt, 0, sizeof(cnt));
    int i,j,k;
    for(i=0,j=0; i<m; i++)
    {
        while(j<n && e[j].x >= f[i].x){
            cnt[e[j].y]++;
            j++;
        }
        for(k=0; k<=100; k++)
        {
            if(cnt[k] && k>=f[i].y)
            {
                num++;
                cnt[k]--;
                ans += 200*f[i].x + 3*f[i].y;
                break;
            }
        }
    }
    printf("%d %lld\n", num, ans);
    return 0;
}





画家小Q
#include <iostream>
using namespace std;
unsigned char canvas[50][50];
int n, m;
 
int checkAndClear(unsigned char cmp, int slope, int i, int j)
{
    int flag = 0;
    do {
        //判断最长笔画并且置零对应颜色位
        if (canvas[i][j] & cmp)
        {
            canvas[i][j] &= ~cmp;
            ++i, j += slope, flag = 1;
        }
        else
            return flag;
    }while ( i < n && i >= 0 && j < m && j >= 0);
 
    return flag;
}
 
int main()
{
 
    cin >> n >> m;
    for(int i = 0; i < n; ++i)
    {
        string str;
        cin >> str;
        for(int j = 0; j < m; ++j)
        {
            switch(str[j]) //用位表示颜色
            {
            case 'B': canvas[i][j] = 1; break;
            case 'Y': canvas[i][j] = 2; break;
            case 'G': canvas[i][j] = 3; break;
            default: break;
            }
        }
    }
    int result = 0;
    for(int i = 0; i < n; ++i)
    {
        for(int j = 0; j < m; ++j)
        {
            result += checkAndClear(1, -1, i, j); //蓝色1 斜率-1
            result += checkAndClear(2, 1, i, j); // 黄色2 斜率 1
        }
    }
    cout << result << endl;
    return 0;
}